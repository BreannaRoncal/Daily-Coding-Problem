"""
Two Sum - Pair with Given Sum


Given an array arr[] of positive integers and another integer target. Determine if there exist two distinct indices such that the sum of their elements is equal to the target.

Examples:
  Input: arr[] = [1, 4, 45, 6, 10, 8], target = 16
  Output: true
  Explanation: arr[3] + arr[4] = 6 + 10 = 16.

  Input: arr[] = [1, 2, 4, 3, 6], target = 11
  Output: false
  Explanation: None of the pair makes a sum of 11.

  Input: arr[] = [11], target = 11
  Output: false
  Explanation: No pair is possible as only one element is present in arr[].
Constraints:
  1 ≤ arr.size ≤ 105
  1 ≤ arr[i] ≤ 105
  1 ≤ target ≤ 2*105

"""


#User function Template for python3
class Solution:
	def twoSum(self, arr, target):
		# code here
		arr.sort()
		
		l_ptr = 0
		r_ptr = len(arr) - 1
		
		while l_ptr < r_ptr:
		    sum = arr[l_ptr] + arr[r_ptr]
		    
		    if sum == target:
		        return True
		    
		    elif sum < target:
		        l_ptr += 1
		    else:
		        r_ptr -= 1
		        
		return False
		


#{ 
 # Driver Code Starts
#Initial Template for Python 3

#Initial Template for Python 3


def main():
    T = int(input())
    while T > 0:
        x = int(input())
        arr = list(map(int, input().strip().split()))
        ob = Solution()
        ans = ob.twoSum(arr, x)
        if ans:
            print("true")
        else:
            print("false")
        T -= 1
        print("~")


if __name__ == "__main__":
    main()

# } Driver Code Ends
