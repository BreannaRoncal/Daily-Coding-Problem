"""
Apple and Orange
Sam's house has an apple tree and an orange tree that yield an abundance of fruit. 
Using the information given below, determine the number of apples and oranges that land on Sam's house.

Complete the countApplesAndOranges function in the editor below. It should print the number of apples 
and oranges that land on Sam's house, each on a separate line.

countApplesAndOranges has the following parameter(s):

    -s: integer, starting point of Sam's house location.
    -t: integer, ending location of Sam's house location.
    -a: integer, location of the Apple tree.
    -b: integer, location of the Orange tree.
    -apples: integer array, distances at which each apple falls from the tree.
    -oranges: integer array, distances at which each orange falls from the tree.
 
Input Format:
  The first line contains two space-separated integers denoting the respective values of s and t.
  The second line contains two space-separated integers denoting the respective values of a and b.
  The third line contains two space-separated integers denoting the respective values of m and n.
  The fourth line contains m space-separated integers denoting the respective distances that each apple falls from point a.
  The fifth line contains n space-separated integers denoting the respective distances that each orange falls from point b.


Output Format:
  Print two integers on two different lines:
      1. The first integer: the number of apples that fall on Sam's house.
      2. The second integer: the number of oranges that fall on Sam's house.

Example Input:
  7 11
  5 15
  3 2
  -2 2 1
  5 -6
  
Example Output:
  1
  1
"""


# Complete the countApplesAndOranges function below.
def countApplesAndOranges(s, t, a, b, apples, oranges):
    #keep count of apples and oranges that land Sam's house
    total_apples = 0
    total_oranges = 0
    
    #Add apple's falling distance from the apple tree and see if it is in the range of Sam's house
    for i in apples:
        apple_distance = a + i
        if s <= apple_distance <= t:
            total_apples += 1
            
    #Add orange's falling distance from the apple tree and see if it is in the range of Sam's house
    for i in oranges:
        orange_distance = b + i
        if s <= orange_distance <= t:
            total_oranges += 1
    
    print(total_apples)
    print(total_oranges)

if __name__ == '__main__':
    st = input().split()

    s = int(st[0])

    t = int(st[1])

    ab = input().split()

    a = int(ab[0])

    b = int(ab[1])

    mn = input().split()

    m = int(mn[0])

    n = int(mn[1])

    apples = list(map(int, input().rstrip().split()))

    oranges = list(map(int, input().rstrip().split()))

    countApplesAndOranges(s, t, a, b, apples, oranges)

